"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[6314],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),y=a,d=u["".concat(s,".").concat(y)]||u[y]||m[y]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8013:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(8168),a=(n(6540),n(5680));const o={},i="Prerequisites",c={unversionedId:"Practical Sessions/Smart Contracts/prerequisites",id:"Practical Sessions/Smart Contracts/prerequisites",title:"Prerequisites",description:"Install mxpy - blockchain interaction",source:"@site/docs/Practical Sessions/Smart Contracts/prerequisites.md",sourceDirName:"Practical Sessions/Smart Contracts",slug:"/Practical Sessions/Smart Contracts/prerequisites",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/prerequisites",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Smart Contracts",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/"},next:{title:"Create Wallet from command line",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Smart Contracts/wallet_cmdline"}},s={},l=[{value:"Install mxpy - blockchain interaction",id:"install-mxpy---blockchain-interaction",level:2},{value:"Install sc-meta - contract interaction",id:"install-sc-meta---contract-interaction",level:2},{value:"Contracts examples",id:"contracts-examples",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("h2",{id:"install-mxpy---blockchain-interaction"},"Install mxpy - blockchain interaction"),(0,a.yg)("p",null,"We use ",(0,a.yg)("inlineCode",{parentName:"p"},"mxpy")," to interact with the blockchain."),(0,a.yg)("p",null,"To install ",(0,a.yg)("inlineCode",{parentName:"p"},"mxpy")," run:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"wget -O mxpy-up.py https://raw.githubusercontent.com/multiversx/mx-sdk-py-cli/main/mxpy-up.py\npython3 mxpy-up.py\n")),(0,a.yg)("p",null,"To check the successful installation:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"$ mxpy --version\nMultiversX Python CLI (mxpy) 6.1.3\n")),(0,a.yg)("p",null,"If you encounter any errors, follow the guide ",(0,a.yg)("a",{parentName:"p",href:"https://docs.multiversx.com/sdk-and-tools/sdk-py/installing-mxpy/"},"here"),"."),(0,a.yg)("h2",{id:"install-sc-meta---contract-interaction"},"Install sc-meta - contract interaction"),(0,a.yg)("p",null,"We use ",(0,a.yg)("inlineCode",{parentName:"p"},"sc-meta")," to compile the contracts and to upgrade the dependencies."),(0,a.yg)("p",null,"To install ",(0,a.yg)("inlineCode",{parentName:"p"},"sc-meta"),", simply call:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"$ cargo install multiversx-sc-meta\n")),(0,a.yg)("p",null,"To check for successful installation:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"$ sc-meta --version\nmultiversx-sc-meta 0.45.1\n")),(0,a.yg)("p",null,"If you encounter any errors, follow the guide ",(0,a.yg)("a",{parentName:"p",href:"https://docs.multiversx.com/developers/meta/sc-meta#introduction"},"here"),"."),(0,a.yg)("h2",{id:"contracts-examples"},"Contracts examples"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/multiversx/mx-contracts-rs"},"Here")," is a list of Smart Contract examples. We will use part of them to understand smart contracts on MultiversX."))}m.isMDXComponent=!0}}]);