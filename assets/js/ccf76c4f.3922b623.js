"use strict";(self.webpackChunkblockchain_protocols_and_distributed_applications=self.webpackChunkblockchain_protocols_and_distributed_applications||[]).push([[2191],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,h=u["".concat(c,".").concat(d)]||u[d]||b[d]||a;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2537:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},s="Blockchain Observers",i={unversionedId:"Practical Sessions/Explorer/Blockchain Observers/observers",id:"Practical Sessions/Explorer/Blockchain Observers/observers",title:"Blockchain Observers",description:"Observers are a type of nodes that don't participate in the consensus but keep a peer-to-peer communication with the rest of the blockchain.",source:"@site/docs/Practical Sessions/Explorer/Blockchain Observers/observers.md",sourceDirName:"Practical Sessions/Explorer/Blockchain Observers",slug:"/Practical Sessions/Explorer/Blockchain Observers/observers",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Blockchain Observers/observers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Blockchain Validators",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Blockchain Validators/validators"},next:{title:"Devnet & Testnet Blockchain",permalink:"/blockchain-protocols-and-distributed-applications/Practical Sessions/Explorer/Devnet Blockchains/devnet_testnet"}},c={},l=[],p={toc:l},u="wrapper";function b(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"blockchain-observers"},"Blockchain Observers"),(0,o.kt)("p",null,"Observers are a type of nodes that ",(0,o.kt)("inlineCode",{parentName:"p"},"don't participate in the consensus")," but keep a peer-to-peer communication with the rest of the blockchain.\nThey are usually used to see the communication between nodes (ex: debugging). "),(0,o.kt)("p",null,"Let's filter the nodes to see only the observers. There is an ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.multiversx.com/nodes?type=observer"},"Observers")," tab below the ",(0,o.kt)("inlineCode",{parentName:"p"},"Nodes")," section."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Observers",src:r(2975).Z,width:"1279",height:"755"})),(0,o.kt)("p",null,"We can observer the same fields as the nodes, but there is no ",(0,o.kt)("inlineCode",{parentName:"p"},"Rating"),". Why is that?"),(0,o.kt)("p",null,"Note that each Observer is only on a Shard."),(0,o.kt)("p",null,"What should we do if we want to listen to the communication on every shard?"),(0,o.kt)("p",null,"Observer that there are other types of nodes"))}b.isMDXComponent=!0},2975:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/observers-b156b494dcfa463df79848f254b5430e.png"}}]);